%# BEGIN BPS TAGGED BLOCK {{{
%# 
%# COPYRIGHT:
%# 
%# This software is Copyright (c) 1996-2009 Best Practical Solutions, LLC
%#                                          <jesse@bestpractical.com>
%# 
%# (Except where explicitly superseded by other copyright notices)
%# 
%# 
%# LICENSE:
%# 
%# This work is made available to you under the terms of Version 2 of
%# the GNU General Public License. A copy of that license should have
%# been provided with this software, but in any event can be snarfed
%# from www.gnu.org.
%# 
%# This work is distributed in the hope that it will be useful, but
%# WITHOUT ANY WARRANTY; without even the implied warranty of
%# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
%# General Public License for more details.
%# 
%# You should have received a copy of the GNU General Public License
%# along with this program; if not, write to the Free Software
%# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
%# 02110-1301 or visit their web page on the internet at
%# http://www.gnu.org/licenses/old-licenses/gpl-2.0.html.
%# 
%# 
%# CONTRIBUTION SUBMISSION POLICY:
%# 
%# (The following paragraph is not intended to limit the rights granted
%# to you to modify and distribute this software under the terms of
%# the GNU General Public License and is only of importance to you if
%# you choose to contribute your changes and enhancements to the
%# community by submitting them to Best Practical Solutions, LLC.)
%# 
%# By intentionally submitting any modifications, corrections or
%# derivatives to this work, or any other work intended for use with
%# Request Tracker, to Best Practical Solutions, LLC, you confirm that
%# you are the copyright holder for those contributions and you grant
%# Best Practical Solutions,  LLC a nonexclusive, worldwide, irrevocable,
%# royalty-free, perpetual, license to use, copy, create derivative
%# works based on those contributions, and sublicense and distribute
%# those contributions and any derivatives thereof.
%# 
%# END BPS TAGGED BLOCK }}}
<& /Elements/ListActions, actions => \@actions &>

<form action="Scrips.html" method="post">
<input type="hidden" class="hidden" name="id" value="<% $id %>" />

<h2><&|/l&>Current Scrips</&></h2>
% if ($Scrips->Count == 0 ) {
<p><i><&|/l&>(No scrips)</&></i></p>
% } else {
<table width="100%">
<p><i><&|/l&>(Check box to delete)</&></i></p>
<tr>
<td align="center"><&|/l&>delete</&></td>
<td align="center"><i><&|/l&>on</&></i></td>
<td align="center"><i><&|/l&>off</&></i></td>
<td><i><&|/l&>(delete or select status for queue: active, inactive)</&></i></td>
</tr>
%   while (my $scrip = $Scrips->Next ) {
%     my $status=$info->GlobalScripStatus( $scrip->Id);
<tr>
<td>
<input type="checkbox" class="checkbox" name="DeleteScrip-<%$scrip->Id%>" value="1" />
</td>
<td align="center">
<input type="radio" class=radio name="Status-<%$scrip->Id%>" value="active" <% $status eq 'active' && "checked"%> />
</td>
<td align="center">
<input type="radio" class=radio name="Status-<%$scrip->Id%>" value="inactive" <% $status eq 'inactive' && "checked"%> />
</td>
<td>
<a href="Scrip.html?id=<%$scrip->Id%>&Queue=<%$id%>"><% $scrip->Description || "<i>(".loc('no value').")</i>" |n %></a><br />
<small><&|/l, loc($scrip->ConditionObj->Name), loc($scrip->ActionObj->Name), loc($scrip->TemplateObj->Name) &>[_1] [_2] with template [_3]</&></small>
</td>
</tr>
%   }

</table>

% }

<& /Elements/Submit,
    Caption => loc("Update status and delete selected scrips"), 
    Label => loc("Update/Delete") &>

</form>

<%init>
my (@actions);

my $Scrips = RT::Scrips->new($session{'CurrentUser'});

my $QueueObj = RT::Queue->new($session{'CurrentUser'});
if ( $id ) {
    $QueueObj->Load( $id );
    unless ( $QueueObj->id ) {
        push @actions, loc("Couldn't load queue #[_1]", $id)
    }
}

if ($QueueObj->id) {
    $Scrips->LimitToQueue($id);
}
else {
    $Scrips->LimitToGlobal();
}

# {{{ deal with modifying and deleting existing scrips
# we still support DeleteScrip-id format but array is preferred
foreach my $id ( grep $_, @DeleteScrip, map /^DeleteScrip-(\d+)/, keys %ARGS ) {
    my $scrip = RT::Scrip->new($session{'CurrentUser'});
    $scrip->Load( $id );
    my ($retval, $msg) = $scrip->Delete;
    if ($retval) {
        push @actions, loc("Scrip deleted");
    }
    else {
        push @actions, $msg;
    }
}
# }}}

my $dir_path = $m->request_comp->dir_path;
$Format ||= qq{'<a href="__WebPath__$dir_path/Scrip.html?id=__id__&Queue=$id">__id__</a>/TITLE:#'}
    .qq{,'<a href="__WebPath__$dir_path/Scrip.html?id=__id__&Queue=$id">__Description__</a>/TITLE:Description'}
    .q{,__Stage__, __Condition__, __Action__, __Template__};


require RT::QueueDeactivatedScrip;
my $info = new RT::QueueDeactivatedScrip($session{'CurrentUser'});
while (my $scrip = $Scrips->Next ) {
  my $ScripId = $scrip->Id;
  my $oldstatus = $info->GlobalScripStatus( $ScripId );
  my $status=$ARGS{"Status-$ScripId"};

  if ($status && $status ne $oldstatus) {
    my ($retval, $msg) = (1,undef);
    if ($status eq 'active') {
      ($retval, $msg) = $info->Delete();
    } else {
      if (! $info->Id) {
        ($retval, $msg) = $info->Create( QueueId => 0,
                                         ScripId => $ScripId,
                                         Description => 'by admininterface' );
      }
      if ($retval) {
        ($retval, $msg) = $info->SetStatus( $status );
      }
    }
    if ($retval) {
      push @actions, loc("Scrip status set to [_1]", loc($status));
    } else {
      push @actions, $msg;
    }
  }
}


</%init>

<%ARGS>
$id => undef
$title => undef
$Format => undef
@DeleteScrip => ()
</%ARGS>
